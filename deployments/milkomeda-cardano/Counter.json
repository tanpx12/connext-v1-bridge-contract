{
  "address": "0xA5a992F0DA44e69ebB23a1090aA8e7456B325C9c",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "count",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "increment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "assetId",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "incrementAndSend",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setShouldRevert",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shouldRevert",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xae3258cef980bb4e9abd9d3256ea1e2dc5ee96aab1ca01a257c55c0752ed3b92",
  "receipt": {
    "to": null,
    "from": "0x155B15a7e9Ff0e34cEaF2439589D5C661ADC9493",
    "contractAddress": "0xA5a992F0DA44e69ebB23a1090aA8e7456B325C9c",
    "transactionIndex": 0,
    "gasUsed": "503321",
    "logsBloom": "0x
    "blockHash": "0xb5b20ea5a65e88d6a51063a47ab829de084be18bf64377d2f76cf4667bad1d43",
    "transactionHash": "0xae3258cef980bb4e9abd9d3256ea1e2dc5ee96aab1ca01a257c55c0752ed3b92",
    "logs": [],
    "blockNumber": 1353488,
    "cumulativeGasUsed": "503321",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "1d785e706d8c74a2b4b8c975d06a2bba",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"incrementAndSend\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setShouldRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldRevert\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/Counter.sol\":\"Counter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) private pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\"},\"contracts/lib/LibAsset.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n\\n/**\\n* @title LibAsset\\n* @author Connext <support@connext.network>\\n* @notice This library contains helpers for dealing with onchain transfers\\n*         of assets, including accounting for the native asset `assetId`\\n*         conventions and any noncompliant ERC20 transfers\\n*/\\nlibrary LibAsset {\\n  /** \\n  * @dev All native assets use the empty address for their asset id\\n  *      by convention\\n  */\\n  address constant NATIVE_ASSETID = address(0);\\n\\n  /** \\n  * @notice Determines whether the given assetId is the native asset\\n  * @param assetId The asset identifier to evaluate\\n  * @return Boolean indicating if the asset is the native asset\\n  */\\n  function isNativeAsset(address assetId) internal pure returns (bool) {\\n    return assetId == NATIVE_ASSETID;\\n  }\\n\\n  /** \\n  * @notice Gets the balance of the inheriting contract for the given asset\\n  * @param assetId The asset identifier to get the balance of\\n  * @return Balance held by contracts using this library\\n  */\\n  function getOwnBalance(address assetId) internal view returns (uint256) {\\n    return\\n      isNativeAsset(assetId)\\n        ? address(this).balance\\n        : IERC20(assetId).balanceOf(address(this));\\n  }\\n\\n  /** \\n  * @notice Transfers ether from the inheriting contract to a given\\n  *         recipient\\n  * @param recipient Address to send ether to\\n  * @param amount Amount to send to given recipient\\n  */\\n  function transferNativeAsset(address payable recipient, uint256 amount)\\n      internal\\n  {\\n    Address.sendValue(recipient, amount);\\n  }\\n\\n  /** \\n  * @notice Transfers tokens from the inheriting contract to a given\\n  *         recipient\\n  * @param assetId Token address to transfer\\n  * @param recipient Address to send ether to\\n  * @param amount Amount to send to given recipient\\n  */\\n  function transferERC20(\\n      address assetId,\\n      address recipient,\\n      uint256 amount\\n  ) internal {\\n    SafeERC20.safeTransfer(IERC20(assetId), recipient, amount);\\n  }\\n\\n  /** \\n  * @notice Transfers tokens from a sender to a given recipient\\n  * @param assetId Token address to transfer\\n  * @param from Address of sender/owner\\n  * @param to Address of recipient/spender\\n  * @param amount Amount to transfer from owner to spender\\n  */\\n  function transferFromERC20(\\n    address assetId,\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) internal {\\n    SafeERC20.safeTransferFrom(IERC20(assetId), from, to, amount);\\n  }\\n\\n  /** \\n  * @notice Increases the allowance of a token to a spender\\n  * @param assetId Token address of asset to increase allowance of\\n  * @param spender Account whos allowance is increased\\n  * @param amount Amount to increase allowance by\\n  */\\n  function increaseERC20Allowance(\\n    address assetId,\\n    address spender,\\n    uint256 amount\\n  ) internal {\\n    require(!isNativeAsset(assetId), \\\"#IA:034\\\");\\n    SafeERC20.safeIncreaseAllowance(IERC20(assetId), spender, amount);\\n  }\\n\\n  /**\\n  * @notice Decreases the allowance of a token to a spender\\n  * @param assetId Token address of asset to decrease allowance of\\n  * @param spender Account whos allowance is decreased\\n  * @param amount Amount to decrease allowance by\\n  */\\n  function decreaseERC20Allowance(\\n    address assetId,\\n    address spender,\\n    uint256 amount\\n  ) internal {\\n    require(!isNativeAsset(assetId), \\\"#DA:034\\\");\\n    SafeERC20.safeDecreaseAllowance(IERC20(assetId), spender, amount);\\n  }\\n\\n  /**\\n  * @notice Wrapper function to transfer a given asset (native or erc20) to\\n  *         some recipient. Should handle all non-compliant return value\\n  *         tokens as well by using the SafeERC20 contract by open zeppelin.\\n  * @param assetId Asset id for transfer (address(0) for native asset, \\n  *                token address for erc20s)\\n  * @param recipient Address to send asset to\\n  * @param amount Amount to send to given recipient\\n  */\\n  function transferAsset(\\n      address assetId,\\n      address payable recipient,\\n      uint256 amount\\n  ) internal {\\n    isNativeAsset(assetId)\\n      ? transferNativeAsset(recipient, amount)\\n      : transferERC20(assetId, recipient, amount);\\n  }\\n}\",\"keccak256\":\"0x6c450345fa4742df16176aba0ae74bbca4608cdd66880079ee5e04a6ea8e2951\",\"license\":\"UNLICENSED\"},\"contracts/test/Counter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.4;\\n\\nimport \\\"../lib/LibAsset.sol\\\";\\n\\ncontract Counter {\\n  bool public shouldRevert;\\n  uint256 public count = 0;\\n\\n  constructor() {\\n    shouldRevert = false;\\n  }\\n\\n  function setShouldRevert(bool value) public {\\n    shouldRevert = value;\\n  }\\n\\n  function increment() public {\\n    require(!shouldRevert, \\\"increment: shouldRevert is true\\\");\\n    count += 1;\\n  }\\n\\n  function incrementAndSend(address assetId, address recipient, uint256 amount) public payable {\\n    if (LibAsset.isNativeAsset(assetId)) {\\n      require(msg.value == amount, \\\"incrementAndSend: INVALID_ETH_AMOUNT\\\");\\n    } else {\\n      require(msg.value == 0, \\\"incrementAndSend: ETH_WITH_ERC\\\");\\n      LibAsset.transferFromERC20(assetId, msg.sender, address(this), amount);\\n    }\\n    increment();\\n\\n    LibAsset.transferAsset(assetId, payable(recipient), amount);\\n  }\\n}\",\"keccak256\":\"0x6af8cd60a832598b00b525a443956fd35a90e690fb78c1e86f7ce858585dc18d\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x6080604052600060015534801561001557600080fd5b506000805460ff1916905561080f8061002f6000396000f3fe60806040526004361061004a5760003560e01c806306661abd1461004f5780636813d78714610078578063d09de08a146100a8578063d2eee78a146100bd578063d3072d82146100d0575b600080fd5b34801561005b57600080fd5b5061006560015481565b6040519081526020015b60405180910390f35b34801561008457600080fd5b506100a66100933660046106f1565b6000805460ff1916911515919091179055565b005b3480156100b457600080fd5b506100a66100fa565b6100a66100cb3660046106b6565b61016b565b3480156100dc57600080fd5b506000546100ea9060ff1681565b604051901515815260200161006f565b60005460ff16156101525760405162461bcd60e51b815260206004820152601f60248201527f696e6372656d656e743a2073686f756c6452657665727420697320747275650060448201526064015b60405180910390fd5b60018060008282546101649190610778565b9091555050565b6001600160a01b0383166101d9578034146101d45760405162461bcd60e51b8152602060048201526024808201527f696e6372656d656e74416e6453656e643a20494e56414c49445f4554485f414d60448201526313d5539560e21b6064820152608401610149565b610233565b34156102275760405162461bcd60e51b815260206004820152601e60248201527f696e6372656d656e74416e6453656e643a204554485f574954485f45524300006044820152606401610149565b6102338333308461024b565b61023b6100fa565b61024683838361025d565b505050565b61025784848484610281565b50505050565b6001600160a01b03831615610277576102468383836102ec565b61024682826102f7565b6040516001600160a01b03808516602483015283166044820152606481018290526102579085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610305565b6102468383836103d7565b6103018282610407565b5050565b600061035a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166105209092919063ffffffff16565b8051909150156102465780806020019051810190610378919061070d565b6102465760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610149565b6040516001600160a01b03831660248201526044810182905261024690849063a9059cbb60e01b906064016102b5565b804710156104575760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610149565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146104a4576040519150601f19603f3d011682016040523d82523d6000602084013e6104a9565b606091505b50509050806102465760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610149565b606061052f8484600085610539565b90505b9392505050565b60608247101561059a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610149565b843b6105e85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610149565b600080866001600160a01b031685876040516106049190610729565b60006040518083038185875af1925050503d8060008114610641576040519150601f19603f3d011682016040523d82523d6000602084013e610646565b606091505b5091509150610656828286610661565b979650505050505050565b60608315610670575081610532565b8251156106805782518084602001fd5b8160405162461bcd60e51b81526004016101499190610745565b80356001600160a01b03811681146106b157600080fd5b919050565b6000806000606084860312156106ca578283fd5b6106d38461069a565b92506106e16020850161069a565b9150604084013590509250925092565b600060208284031215610702578081fd5b8135610532816107c8565b60006020828403121561071e578081fd5b8151610532816107c8565b6000825161073b81846020870161079c565b9190910192915050565b602081526000825180602084015261076481604085016020870161079c565b601f01601f19169190910160400192915050565b6000821982111561079757634e487b7160e01b81526011600452602481fd5b500190565b60005b838110156107b757818101518382015260200161079f565b838111156102575750506000910152565b80151581146107d657600080fd5b5056fea264697066735822122032ee1189ac0cd8c35bad6d75b46f415b5eb6685a606702434649d21f5c4c893764736f6c63430008040033",
  "deployedBytecode": "0x60806040526004361061004a5760003560e01c806306661abd1461004f5780636813d78714610078578063d09de08a146100a8578063d2eee78a146100bd578063d3072d82146100d0575b600080fd5b34801561005b57600080fd5b5061006560015481565b6040519081526020015b60405180910390f35b34801561008457600080fd5b506100a66100933660046106f1565b6000805460ff1916911515919091179055565b005b3480156100b457600080fd5b506100a66100fa565b6100a66100cb3660046106b6565b61016b565b3480156100dc57600080fd5b506000546100ea9060ff1681565b604051901515815260200161006f565b60005460ff16156101525760405162461bcd60e51b815260206004820152601f60248201527f696e6372656d656e743a2073686f756c6452657665727420697320747275650060448201526064015b60405180910390fd5b60018060008282546101649190610778565b9091555050565b6001600160a01b0383166101d9578034146101d45760405162461bcd60e51b8152602060048201526024808201527f696e6372656d656e74416e6453656e643a20494e56414c49445f4554485f414d60448201526313d5539560e21b6064820152608401610149565b610233565b34156102275760405162461bcd60e51b815260206004820152601e60248201527f696e6372656d656e74416e6453656e643a204554485f574954485f45524300006044820152606401610149565b6102338333308461024b565b61023b6100fa565b61024683838361025d565b505050565b61025784848484610281565b50505050565b6001600160a01b03831615610277576102468383836102ec565b61024682826102f7565b6040516001600160a01b03808516602483015283166044820152606481018290526102579085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610305565b6102468383836103d7565b6103018282610407565b5050565b600061035a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166105209092919063ffffffff16565b8051909150156102465780806020019051810190610378919061070d565b6102465760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610149565b6040516001600160a01b03831660248201526044810182905261024690849063a9059cbb60e01b906064016102b5565b804710156104575760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610149565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146104a4576040519150601f19603f3d011682016040523d82523d6000602084013e6104a9565b606091505b50509050806102465760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610149565b606061052f8484600085610539565b90505b9392505050565b60608247101561059a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610149565b843b6105e85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610149565b600080866001600160a01b031685876040516106049190610729565b60006040518083038185875af1925050503d8060008114610641576040519150601f19603f3d011682016040523d82523d6000602084013e610646565b606091505b5091509150610656828286610661565b979650505050505050565b60608315610670575081610532565b8251156106805782518084602001fd5b8160405162461bcd60e51b81526004016101499190610745565b80356001600160a01b03811681146106b157600080fd5b919050565b6000806000606084860312156106ca578283fd5b6106d38461069a565b92506106e16020850161069a565b9150604084013590509250925092565b600060208284031215610702578081fd5b8135610532816107c8565b60006020828403121561071e578081fd5b8151610532816107c8565b6000825161073b81846020870161079c565b9190910192915050565b602081526000825180602084015261076481604085016020870161079c565b601f01601f19169190910160400192915050565b6000821982111561079757634e487b7160e01b81526011600452602481fd5b500190565b60005b838110156107b757818101518382015260200161079f565b838111156102575750506000910152565b80151581146107d657600080fd5b5056fea264697066735822122032ee1189ac0cd8c35bad6d75b46f415b5eb6685a606702434649d21f5c4c893764736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 6430,
        "contract": "contracts/test/Counter.sol:Counter",
        "label": "shouldRevert",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 6433,
        "contract": "contracts/test/Counter.sol:Counter",
        "label": "count",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}