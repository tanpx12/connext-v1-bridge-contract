/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConnextPriceOracle,
  ConnextPriceOracleInterface,
} from "../ConnextPriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wrapped",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "source",
        type: "address",
      },
    ],
    name: "AggregatorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "DirectPriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "NewAdmin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "lpToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_active",
        type: "bool",
      },
    ],
    name: "PriceRecordUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "V1PriceOracleUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "aggregators",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "assetPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "getPriceFromChainlink",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "getPriceFromDex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "getPriceFromOracle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "getTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPriceOracle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "priceRecords",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "sources",
        type: "address[]",
      },
    ],
    name: "setAggregators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_active",
        type: "bool",
      },
    ],
    name: "setDexPriceInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setDirectPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_v1PriceOracle",
        type: "address",
      },
    ],
    name: "setV1PriceOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "v1PriceOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapped",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161117f38038061117f83398101604081905261002f9161005d565b600180546001600160a01b039092166001600160a01b0319928316179055600080549091163317905561008b565b60006020828403121561006e578081fd5b81516001600160a01b0381168114610084578182fd5b9392505050565b6110e58061009a6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806366331bba11610097578063cb45c4f211610066578063cb45c4f2146102a8578063d02641a0146102bb578063f851a440146102ce578063fe10c98d146102e157600080fd5b806366331bba146101ed578063704b6c0214610205578063856d562d14610218578063a2a870a91461022b57600080fd5b80634c8e42a1116100d35780634c8e42a11461018657806350e70d48146101a7578063538e573c146101ba5780635e9a523c146101cd57600080fd5b806309a8acb014610105578063112cdab91461011a5780631994b4fd146101605780633f9fb50514610173575b600080fd5b610118610113366004610dec565b6102f4565b005b610143610128366004610d79565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61011861016e366004610d93565b61039b565b610118610181366004610e15565b6104d6565b610199610194366004610d79565b610671565b604051908152602001610157565b600154610143906001600160a01b031681565b6101996101c8366004610d79565b610957565b6101996101db366004610d79565b60056020526000908152604090205481565b6101f5600181565b6040519015158152602001610157565b610118610213366004610d79565b61096a565b610199610226366004610d79565b6109f5565b610273610239366004610d79565b6004602052600090815260409020805460018201546002909201546001600160a01b0391821692821691811690600160a01b900460ff1684565b60405161015794939291906001600160a01b039485168152928416602084015292166040820152901515606082015260800190565b6101186102b6366004610d79565b610b49565b6101996102c9366004610d79565b610bdc565b600054610143906001600160a01b031681565b600254610143906001600160a01b031681565b6000546001600160a01b031633146103275760405162461bcd60e51b815260040161031e90610f06565b60405180910390fd5b6001600160a01b0382166000818152600560209081526040918290205482519384529083015281018290527fe2c8fb681c257e4e8df5ef1c464cff10ce6b072837628c9b6de5e7239a483e5d9060600160405180910390a16001600160a01b03909116600090815260056020526040902055565b6000546001600160a01b031633146103c55760405162461bcd60e51b815260040161031e90610f06565b6001600160a01b0384166000908152600460205260408120906103e785610bdc565b90506000811161042e5760405162461bcd60e51b815260206004820152601260248201527134b73b30b634b2103130b9b2903a37b5b2b760711b604482015260640161031e565b81546001600160a01b038781166001600160a01b031992831681178555600185018054898416941684179055600285018054871515600160a01b81026001600160a81b0319909216948a16948517919091179091556040805192835260208301949094529281019190915260608101919091527f896c992bf7fd70df3a83c741812b6b20c1da89e5efeaefa1fde40987c7e91a129060800160405180910390a1505050505050565b6000546001600160a01b031633146105005760405162461bcd60e51b815260040161031e90610f06565b60005b8381101561066a5782828281811061052b57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906105409190610d79565b6003600087878581811061056457634e487b7160e01b600052603260045260246000fd5b90506020020160208101906105799190610d79565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b031916929091169190911790557f89baabef7dfd0683c0ac16fd2a8431c51b49fbe654c3f7b5ef19763e2ccd88f28585838181106105eb57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906106009190610d79565b84848481811061062057634e487b7160e01b600052603260045260246000fd5b90506020020160208101906106359190610d79565b604080516001600160a01b0393841681529290911660208301520160405180910390a1806106628161107e565b915050610503565b5050505050565b6001600160a01b03811660009081526004602052604081206002810154600160a01b900460ff161561094e57805460028201546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a082319060240160206040518083038186803b1580156106ea57600080fd5b505afa1580156106fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107229190610e7e565b905060008260000160009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561077657600080fd5b505afa15801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae9190610ee5565b6107bc9060ff166012611067565b905060006107d56107ce83600a610fa0565b8490610cd8565b600185015460028601546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a082319060240160206040518083038186803b15801561082657600080fd5b505afa15801561083a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085e9190610e7e565b905060008560010160009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156108b257600080fd5b505afa1580156108c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ea9190610ee5565b6108f89060ff166012611067565b9050600061090a6107ce83600a610fa0565b6001880154909150600090610927906001600160a01b0316610bdc565b9050600061093f866109398486610cd8565b90610ced565b9b9a5050505050505050505050565b50600092915050565b600080610963836109f5565b9392505050565b6000546001600160a01b031633146109945760405162461bcd60e51b815260040161031e90610f06565b600080546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc910160405180910390a15050565b6001600160a01b03808216600090815260036020526040812054909116801561094e576000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a5357600080fd5b505afa158015610a67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8b9190610e96565b5050509150508060001415610aa4575060009392505050565b60008190506000610b3f846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610ae757600080fd5b505afa158015610afb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1f9190610ee5565b610b2d9060ff166012611067565b610b3890600a610fa0565b8390610cd8565b9695505050505050565b6000546001600160a01b03163314610b735760405162461bcd60e51b815260040161031e90610f06565b600254604080516001600160a01b03928316815291831660208301527f42e2900b37aa23ca681e13d6efc8018181fa216ca6676cf2b983e00e056afc2c910160405180910390a1600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000816001600160a01b038116610bfb57506001546001600160a01b03165b6001600160a01b03811660009081526005602052604090205480610c2557610c2282610957565b90505b80610c3657610c3382610671565b90505b80158015610c4e57506002546001600160a01b031615155b1561096357600254604051630681320d60e51b81526001600160a01b0384811660048301529091169063d02641a09060240160206040518083038186803b158015610c9857600080fd5b505afa158015610cac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd09190610e7e565b949350505050565b6000610ce48284611048565b90505b92915050565b6000610ce48284610f3d565b80356001600160a01b0381168114610d1057600080fd5b919050565b60008083601f840112610d26578182fd5b50813567ffffffffffffffff811115610d3d578182fd5b6020830191508360208260051b8501011115610d5857600080fd5b9250929050565b805169ffffffffffffffffffff81168114610d1057600080fd5b600060208284031215610d8a578081fd5b610ce482610cf9565b60008060008060808587031215610da8578283fd5b610db185610cf9565b9350610dbf60208601610cf9565b9250610dcd60408601610cf9565b915060608501358015158114610de1578182fd5b939692955090935050565b60008060408385031215610dfe578182fd5b610e0783610cf9565b946020939093013593505050565b60008060008060408587031215610e2a578384fd5b843567ffffffffffffffff80821115610e41578586fd5b610e4d88838901610d15565b90965094506020870135915080821115610e65578384fd5b50610e7287828801610d15565b95989497509550505050565b600060208284031215610e8f578081fd5b5051919050565b600080600080600060a08688031215610ead578081fd5b610eb686610d5f565b9450602086015193506040860151925060608601519150610ed960808701610d5f565b90509295509295909350565b600060208284031215610ef6578081fd5b815160ff81168114610963578182fd5b60208082526017908201527f63616c6c6572206973206e6f74207468652061646d696e000000000000000000604082015260600190565b600082610f5857634e487b7160e01b81526012600452602481fd5b500490565b600181815b80851115610f98578160001904821115610f7e57610f7e611099565b80851615610f8b57918102915b93841c9390800290610f62565b509250929050565b6000610ce48383600082610fb657506001610ce7565b81610fc357506000610ce7565b8160018114610fd95760028114610fe357610fff565b6001915050610ce7565b60ff841115610ff457610ff4611099565b50506001821b610ce7565b5060208310610133831016604e8410600b8410161715611022575081810a610ce7565b61102c8383610f5d565b806000190482111561104057611040611099565b029392505050565b600081600019048311821515161561106257611062611099565b500290565b60008282101561107957611079611099565b500390565b600060001982141561109257611092611099565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220075fa5fc67811dc4dd037426528406941c622a52886ee6a5af5eabbe42cbd5cb64736f6c63430008040033";

export class ConnextPriceOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _wrapped: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnextPriceOracle> {
    return super.deploy(
      _wrapped,
      overrides || {}
    ) as Promise<ConnextPriceOracle>;
  }
  getDeployTransaction(
    _wrapped: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_wrapped, overrides || {});
  }
  attach(address: string): ConnextPriceOracle {
    return super.attach(address) as ConnextPriceOracle;
  }
  connect(signer: Signer): ConnextPriceOracle__factory {
    return super.connect(signer) as ConnextPriceOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnextPriceOracleInterface {
    return new utils.Interface(_abi) as ConnextPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnextPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as ConnextPriceOracle;
  }
}
