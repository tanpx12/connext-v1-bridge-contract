/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LibAssetTest, LibAssetTestInterface } from "../LibAssetTest";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseERC20Allowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
    ],
    name: "getOwnBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseERC20Allowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
    ],
    name: "isNativeAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferNativeAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ab8806100206000396000f3fe6080604052600436106100745760003560e01c80639db5dbe41161004e5780639db5dbe4146100f7578063a7d2fdf614610117578063b29fd85914610145578063cad1b1131461016557600080fd5b806305e9686314610080578063439e2e45146100b55780637f0128b2146100d757600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100a061009b3660046108f8565b610185565b60405190151581526020015b60405180910390f35b3480156100c157600080fd5b506100d56100d036600461093f565b610199565b005b3480156100e357600080fd5b506100d56100f2366004610914565b6101a9565b34801561010357600080fd5b506100d561011236600461097f565b6101b7565b34801561012357600080fd5b506101376101323660046108f8565b6101c2565b6040519081526020016100ac565b34801561015157600080fd5b506100d561016036600461097f565b6101cd565b34801561017157600080fd5b506100d561018036600461097f565b6101d8565b60006001600160a01b038216155b92915050565b6101a48383836101e3565b505050565b6101b38282610203565b5050565b6101a483838361020d565b600061019382610218565b6101a48383836102ac565b6101a48383836102fc565b6001600160a01b038316156101fd576101a483838361020d565b6101a482825b6101b38282610347565b6101a4838383610460565b60006001600160a01b038216156102a5576040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b15801561026857600080fd5b505afa15801561027c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a091906109b3565b610193565b4792915050565b6001600160a01b0383166102f15760405162461bcd60e51b815260206004820152600760248201526608d2504e8c0ccd60ca1b60448201526064015b60405180910390fd5b6101a48383836104c3565b6001600160a01b03831661033c5760405162461bcd60e51b815260206004820152600760248201526608d1104e8c0ccd60ca1b60448201526064016102e8565b6101a483838361058a565b804710156103975760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016102e8565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146103e4576040519150601f19603f3d011682016040523d82523d6000602084013e6103e9565b606091505b50509050806101a45760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016102e8565b6040516001600160a01b0383166024820152604481018290526101a490849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526106ac565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b15801561050f57600080fd5b505afa158015610523573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054791906109b3565b6105519190610a1a565b6040516001600160a01b03851660248201526044810182905290915061058490859063095ea7b360e01b9060640161048c565b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e9060440160206040518083038186803b1580156105d557600080fd5b505afa1580156105e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060d91906109b3565b9050818110156106715760405162461bcd60e51b815260206004820152602960248201527f5361666545524332303a2064656372656173656420616c6c6f77616e63652062604482015268656c6f77207a65726f60b81b60648201526084016102e8565b6040516001600160a01b038416602482015282820360448201819052906106a590869063095ea7b360e01b9060640161048c565b5050505050565b6000610701826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661077e9092919063ffffffff16565b8051909150156101a4578080602001905181019061071f9190610993565b6101a45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102e8565b606061078d8484600085610797565b90505b9392505050565b6060824710156107f85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102e8565b843b6108465760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102e8565b600080866001600160a01b0316858760405161086291906109cb565b60006040518083038185875af1925050503d806000811461089f576040519150601f19603f3d011682016040523d82523d6000602084013e6108a4565b606091505b50915091506108b48282866108bf565b979650505050505050565b606083156108ce575081610790565b8251156108de5782518084602001fd5b8160405162461bcd60e51b81526004016102e891906109e7565b600060208284031215610909578081fd5b813561079081610a6a565b60008060408385031215610926578081fd5b823561093181610a6a565b946020939093013593505050565b600080600060608486031215610953578081fd5b833561095e81610a6a565b9250602084013561096e81610a6a565b929592945050506040919091013590565b600080600060608486031215610953578283fd5b6000602082840312156109a4578081fd5b81518015158114610790578182fd5b6000602082840312156109c4578081fd5b5051919050565b600082516109dd818460208701610a3e565b9190910192915050565b6020815260008251806020840152610a06816040850160208701610a3e565b601f01601f19169190910160400192915050565b60008219821115610a3957634e487b7160e01b81526011600452602481fd5b500190565b60005b83811015610a59578181015183820152602001610a41565b838111156105845750506000910152565b6001600160a01b0381168114610a7f57600080fd5b5056fea2646970667358221220cc17ed4dc4d00489f63a4a4cfb90fee197693e8b950b2fbb8bffb3bdee0458c064736f6c63430008040033";

export class LibAssetTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LibAssetTest> {
    return super.deploy(overrides || {}) as Promise<LibAssetTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LibAssetTest {
    return super.attach(address) as LibAssetTest;
  }
  connect(signer: Signer): LibAssetTest__factory {
    return super.connect(signer) as LibAssetTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibAssetTestInterface {
    return new utils.Interface(_abi) as LibAssetTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibAssetTest {
    return new Contract(address, _abi, signerOrProvider) as LibAssetTest;
  }
}
